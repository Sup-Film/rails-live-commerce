# == Schema Information
#
# Table name: orders
#
#  id                        :bigint           not null, primary key
#  checkout_completed_at     :datetime
#  checkout_token            :string           not null
#  checkout_token_expires_at :datetime
#  comment_time              :datetime
#  customer_address          :text
#  customer_email            :string
#  customer_name             :string
#  customer_phone            :string
#  deleted_at                :datetime
#  facebook_user_name        :string
#  notes                     :text
#  order_number              :string           not null
#  paid_at                   :datetime
#  quantity                  :integer          default(1)
#  ref                       :string
#  status                    :integer          default("pending")
#  total_amount              :decimal(10, 2)
#  tracking                  :string
#  unit_price                :decimal(10, 2)
#  created_at                :datetime         not null
#  updated_at                :datetime         not null
#  facebook_comment_id       :string           not null
#  facebook_live_id          :string
#  facebook_user_id          :string           not null
#  product_id                :bigint           not null
#  user_id                   :bigint           not null
#
# Indexes
#
#  index_orders_on_checkout_token                   (checkout_token) UNIQUE
#  index_orders_on_checkout_token_expires_at        (checkout_token_expires_at)
#  index_orders_on_comment_and_users                (facebook_comment_id,facebook_user_id,user_id) UNIQUE
#  index_orders_on_deleted_at                       (deleted_at)
#  index_orders_on_facebook_user_id_and_created_at  (facebook_user_id,created_at)
#  index_orders_on_order_number                     (order_number)
#  index_orders_on_product_id                       (product_id)
#  index_orders_on_status_and_created_at            (status,created_at)
#  index_orders_on_user_id                          (user_id)
#  index_orders_on_user_id_and_status               (user_id,status)
#
# Foreign Keys
#
#  fk_rails_...  (product_id => products.id)
#  fk_rails_...  (user_id => users.id)
#

# This model initially had no columns defined. If you add columns to the
# model remove the "{}" from the fixture names and add the columns immediately
# below each fixture, per the syntax in the comments below
#
# test/fixtures/orders.yml
# อ้างอิง Product และ User จาก fixtures อื่นๆ
# ตัวอย่าง: products(:one) และ users(:one)

one:
  order_number: "CF1001"
  status: 0 # pending
  product: one # อ้างอิงถึง product ที่ชื่อ 'one' ใน products.yml
  quantity: 1
  unit_price: 9.99
  total_amount: 9.99
  user: one # อ้างอิงถึง user ที่ชื่อ 'one' ใน users.yml
  facebook_live_id: "live_id_test_1"
  facebook_comment_id: "comment_id_one"
  facebook_user_id: "fb_user_id_one"
  facebook_user_name: "Facebook User One"
  checkout_token: "token1"
  comment_time: "2024-07-15 12:00:00"

two:
  order_number: "CF1002"
  status: 0 # pending
  product: two # อ้างอิงถึง product ที่ชื่อ 'two' ใน products.yml
  quantity: 1
  unit_price: 19.99
  total_amount: 19.99
  user: one # สามารถใช้ user คนเดิมได้ หรือสร้าง user ใหม่
  facebook_live_id: "live_id_test_2"
  facebook_comment_id: "comment_id_two"
  facebook_user_id: "fb_user_id_two"
  facebook_user_name: "Facebook User Two"
  checkout_token: "token2"
  comment_time: "2024-07-15 12:00:00"

# เพิ่ม fixture สำหรับเคสที่จะทดสอบการสร้างออเดอร์ซ้ำ
# สำหรับ test "should not create duplicate order for the same comment and user"
existing_order_for_duplicate_test:
  order_number: "7777" # ตรงกับรหัสสินค้าที่ parse ได้จากข้อความ (ไม่รวม CF)
  status: 0 # pending
  product: one # อ้างอิง product ที่ถูกใช้ใน test case
  user: one # อ้างอิง user ที่ถูกใช้ใน test case
  facebook_live_id: "mock_live_id_123"
  facebook_comment_id: "existing_comment_id" # ตรงกับ comment_data[:id]
  facebook_user_id: "facebook_user_1" # ตรงกับ comment_data[:from][:id]
  facebook_user_name: "Facebook User One"
  checkout_token: "token3"
  comment_time: "2024-07-15 12:00:00"
